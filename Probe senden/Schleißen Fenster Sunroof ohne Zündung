// CAN Send Example
//

#include <mcp_can.h>
#include <SPI.h>

MCP_CAN CAN0(5);     // Set CS to pin 10

void setup()
{
  Serial.begin(115200);

  // Initialize MCP2515 running at 16MHz with a baudrate of 500kb/s and the masks and filters disabled.
  if(CAN0.begin(MCP_ANY, CAN_250KBPS, MCP_8MHZ) == CAN_OK) Serial.printf("MCP2515 Initialized Successfully!\n");
  else Serial.println("Error Initializing MCP2515...");

  CAN0.setMode(MCP_NORMAL);   // Change to normal mode to allow messages to be transmitted
  Serial.print("Can set mode normal\n");
}

byte data[8] = {0x00, 0x2A, 0x0F, 0x00, 0xA0, 0xA8, 0xDA, 0x03};
byte data_Fenster_regen[8] ={0xCF, 0xC0, 0xFF, 0x7F, 0x01, 0x00, 0x55, 0x00};
byte data_Sunroof_regen[8]= {0xF0, 0x00, 0x81, 0x00, 0xA7, 0xFF, 0x7F, 0x01};
byte data_unlock[8]= {0x00, 0x22, 0x22, 0xAA, 0x01, 0x00, 0x00, 0x00};
byte data_lock[8]= {0x00, 0x11, 0x11, 0x55, 0x01, 0x00, 0x00, 0x00};
byte data_Alarmanlage[2]= {0x83, 0x00};
void loop()
{
  // send data:  ID = 0x100, Standard CAN Frame, Data length = 8 bytes, 'data' = array of data bytes to send
 
  byte sndStat = CAN0.sendMsgBuf(0x335, 0, 8, data_Fenster_regen);
  delay(10);
   sndStat= CAN0.sendMsgBuf(0x339, 0, 8, data_Sunroof_regen);
  delay(10);
  

  if(sndStat == CAN_OK){
    Serial.println("Message Sent Successfully!");
  } else {
    Serial.println("Error Sending Message...");
  }
  delay(10000);   // send data per 100ms
}

/*********************************************************************************************************
  END FILE
*********************************************************************************************************/
